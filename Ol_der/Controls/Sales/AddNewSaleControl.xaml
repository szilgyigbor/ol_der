<UserControl x:Class="Ol_der.Controls.Sales.AddNewSaleControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Ol_der.Controls.Sales"
             xmlns:models="clr-namespace:Ol_der.Models"
             mc:Ignorable="d"
             FontSize="15"
             Background="#f6f8f9"
             d:DesignHeight="450" d:DesignWidth="1300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/CommonButtonStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Palette -->
            <Color x:Key="AccentColor">#1ABC9C</Color>
            <Color x:Key="AccentDark">#179A86</Color>
            <Color x:Key="Surface">#FFFFFF</Color>
            <Color x:Key="Muted">#f1f4f5</Color>
            <Color x:Key="TextPrimary">#2c3e50</Color>
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="AccentDarkBrush" Color="{StaticResource AccentDark}" />
            <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource Surface}" />
            <SolidColorBrush x:Key="MutedBrush" Color="{StaticResource Muted}" />
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimary}" />

            <!-- Common subtle shadow (light) -->
            <DropShadowEffect x:Key="CardShadow" Color="#22000000" BlurRadius="2" ShadowDepth="2" />

            <!-- Modern controls styles (keeps existing bindings intact) -->
            <Style TargetType="Button" x:Key="ModernPrimaryButton">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Padding" Value="10,6" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="8" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentDarkBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.9"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ModernGhostButton" BasedOn="{StaticResource ModernPrimaryButton}">
                <Setter Property="Background" Value="Lightblue" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#e0e7e7" />
            </Style>

            <Style TargetType="Button" x:Key="ModernGhostRedButton" BasedOn="{StaticResource ModernPrimaryButton}">
                <Setter Property="Background" Value="LightPink" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#e0e7e7" />
            </Style>

            <Style TargetType="TextBox" x:Key="ModernTextBox">
                <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
                <Setter Property="BorderBrush" Value="#e0e7e7" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Height" Value="32" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#d0dbe0" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBox" x:Key="ModernComboBox">
                <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
                <Setter Property="BorderBrush" Value="#e0e7e7" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="6" />
                <Setter Property="Height" Value="32" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        CornerRadius="6">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="ContentPresenter" 
                                                             Grid.Column="0"
                                                             Margin="8,0,8,0" 
                                                             VerticalAlignment="Center"
                                                             Content="{TemplateBinding SelectedItem}">
                                            <ContentPresenter.ContentTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Display}" />
                                                </DataTemplate>
                                            </ContentPresenter.ContentTemplate>
                                        </ContentPresenter>
                                        <ToggleButton x:Name="ToggleButton" 
                                                         Grid.Column="1"
                                                         Background="Transparent" 
                                                         BorderThickness="0" 
                                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                         ClickMode="Press"
                                                         Width="30">
                                            <Path x:Name="Arrow" 
                                                  Data="M 0 0 L 16 0 L 8 10 Z" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Margin="0,0,5,0" 
                                                  Fill="#7a8b8b"/>
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <Popup x:Name="PART_Popup" 
                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                       Placement="Bottom" 
                                       AllowsTransparency="True" 
                                       Focusable="False" 
                                       PopupAnimation="Slide">
                                    <Border MaxHeight="200" 
                                            MinWidth="{TemplateBinding ActualWidth}" 
                                            Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="1" 
                                            CornerRadius="6">
                                        <ScrollViewer>
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="Arrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterX="8" CenterY="5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBoxItem" x:Key="ModernListBoxItem">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Background="{TemplateBinding Background}" CornerRadius="2" BorderBrush="#e8eef0" BorderThickness="1">
                                <ContentPresenter Margin="0" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#d1f1e9"/>
                                    <Setter Property="BorderBrush" Value="Lightblue"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Lightblue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- BooleanToVisibility kept for compatibility -->
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        </ResourceDictionary>
    </UserControl.Resources>

    <!-- Layout kept the same rows/structure so functionality & bindings remain identical -->
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header / Customer area (left) -->
        <DockPanel Grid.Row="0" LastChildFill="False">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,20,0">
                <Label Content="Ügyfél:" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}" FontWeight="SemiBold"/>

                <Border Background="#eef1f6" CornerRadius="6" Padding="6" Margin="6" BorderBrush="#ddd" BorderThickness="1" VerticalAlignment="Center" Visibility="{Binding Customer.Name}" Width="320">
                    <TextBlock x:Name="txtExistsCustomerName" Foreground="#222" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding Customer.Name}"/>
                </Border>

                <Button Content="Kiválaszt" Style="{StaticResource ModernGhostButton}" Click="AddCustomer_Click" Width="90" Margin="6,0" Height="36"/>
                <Button Content="Eltávolít" Style="{StaticResource ModernGhostRedButton}" Click="RemoveCustomer_Click" Width="90" Margin="6,0" Height="36"/>

                <StackPanel Orientation="Horizontal" Margin="14,0,0,0" VerticalAlignment="Center">
                    <Label Content="Alkalmi vásárló:" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
                    <TextBox Margin="6" Padding="2" x:Name="txtCustomerName" Width="300" Style="{StaticResource ModernTextBox}"/>
                </StackPanel>
            </StackPanel>

            <!-- Right actions -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right" Margin="0,0,0,0">
                <Button Content="Mégse" Style="{StaticResource ModernGhostRedButton}" Height="36" Width="110" FontSize="16" Click="btnCancel_Click" Margin="6,0"/>
                <Button Content="Mentés" Style="{StaticResource ModernPrimaryButton}" Height="36" Width="110" FontSize="16" Click="btnSaveSale_Click" Margin="6,0"/>
            </StackPanel>
        </DockPanel>

        <!-- Second row: totals, checkbox, date -->
        <DockPanel Grid.Row="1" LastChildFill="False" Margin="0,10,0,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Label Content="Teljes összeg:" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
                <TextBox Margin="8" x:Name="txtTotalAmount" Width="110" HorizontalContentAlignment="Right" Style="{StaticResource ModernTextBox}"/>
                <TextBlock Text=".-Ft." Width="40" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{StaticResource TextPrimaryBrush}"/>

                <CheckBox x:Name="chkIsTransactionProcessed"
                          Content="Könyvelt"
                          Margin="18,0"
                          VerticalAlignment="Center"
                          IsChecked="{Binding IsTransactionProcessed, Mode=TwoWay}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <!-- default: hidden -->
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedValue, ElementName=cmbPaymentType}"
                                             Value="{x:Static models:PaymentType.Card}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedValue, ElementName=cmbPaymentType}"
                                             Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>

                <Label Margin="20,0,0,0" x:Name="lblDiscountedTotal" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right">
                <Label Content="Dátum:" HorizontalAlignment="Right" Foreground="{StaticResource TextPrimaryBrush}"/>
                <TextBox Margin="8" x:Name="txtSaleDate" Width="200" HorizontalContentAlignment="Right" Style="{StaticResource ModernTextBox}"/>
            </StackPanel>
        </DockPanel>

        <!-- Payment type row -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10,0,0">
            <Label Content="Fizetési mód:" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
            <ComboBox Margin="8"
                      x:Name="cmbPaymentType"
                      Width="130"
                      ItemsSource="{Binding PaymentTypes}"
                      Style="{StaticResource ModernComboBox}"
                      DisplayMemberPath="Display"
                      SelectedValuePath="Value"/>
        </StackPanel>

        <!-- Notes -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,10,0,0">
            <Label Content="Megjegyzés:" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
            <TextBox Margin="8" x:Name="txtNotes" AcceptsReturn="False" Width="700" Style="{StaticResource ModernTextBox}"/>
        </StackPanel>

        <Label Content="Termékek hozzáadása a vásárláshoz:" Margin="0 30 0 0" Grid.Row="4" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="20" Foreground="{StaticResource TextPrimaryBrush}"/>

        <!-- Item entry and actions -->
        <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="0,8,0,0">
            <Label Content="Cikkszám:" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
            <TextBox x:Name="txtItemNumber" Margin="8" Width="116" KeyDown="txtItemNumber_KeyDown" Style="{StaticResource ModernTextBox}"/>
            <Button Content="Hozzáadás" Style="{StaticResource ModernGhostButton}" Click="btnSearchProduct_Click" Margin="8,0" Height="32"/>
        </StackPanel>

        <StackPanel Grid.Row="6" Orientation="Horizontal" Margin="0,8,0,0">
            <Button Content="Keresés" Style="{StaticResource ModernGhostButton}" Click="DetailedSearch_Click" Margin="0,0,20,0"/>
            <Button Content="Total" Style="{StaticResource ModernGhostButton}" Click="UpdateItem_Click" Margin="0,0,20,0"/>
            <Button Content="Törlés" Style="{StaticResource ModernGhostRedButton}" Click="DeleteItem_Click" Margin="0,0,20,0"/>
        </StackPanel>

        <!-- Sale items list -->
        <ListBox x:Name="lstSaleItems" Grid.Row="7" Margin="2" Background="Transparent" BorderBrush="Transparent" Padding="6" Height="Auto" ItemContainerStyle="{StaticResource ModernListBoxItem}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border CornerRadius="5" Background="#f9f9f9" BorderBrush="#e8eef0" BorderThickness="0" Margin="0" Padding="0">
                        <DockPanel x:Name="ItemPanel"
                                   Margin="2"
                                   VerticalAlignment="Center"
                                   Background="#f9f9f9">
                            <TextBox Text="{Binding Quantity, Mode=TwoWay}" Width="50" Margin="2" Style="{StaticResource ModernTextBox}"/>
                            <TextBlock Text="db" Width="30" Margin="2 0" VerticalAlignment="Center" Foreground="#111"/>
                            <TextBlock Text="{Binding Product.ItemNumber}" Width="150" Margin="2 0" VerticalAlignment="Center" Foreground="#111"/>
                            <TextBlock Text="{Binding Product.Name}" Width="520" Margin="2 0" VerticalAlignment="Center" Foreground="#111"/>
                            <TextBox Text="{Binding Price, Mode=TwoWay, StringFormat=F0}" Width="90" Margin="2 0" HorizontalContentAlignment="Right" Style="{StaticResource ModernTextBox}"/>
                            <TextBlock Text=".-Ft." Width="40" Margin="2 0" VerticalAlignment="Center" Foreground="#111"/>
                            <CheckBox Content="legyen rendelve?" IsChecked="{Binding NeedToOrder, Mode=TwoWay}" VerticalAlignment="Center" Margin="2 0"/>
                        </DockPanel>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                             Value="True">
                            <Setter TargetName="ItemPanel" Property="Background" Value="Lightblue"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                             Value="True">
                            <Setter TargetName="ItemPanel" Property="Background" Value="#e6faf4"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </Grid>
</UserControl>
